// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:18 +0530

package net.jradius.dictionary;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.RadiusAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Service-Type<br>
 * Attribute Type: 6<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Login-User (1)
 * <li> Framed-User (2)
 * <li> Callback-Login-User (3)
 * <li> Callback-Framed-User (4)
 * <li> Outbound-User (5)
 * <li> Administrative-User (6)
 * <li> NAS-Prompt-User (7)
 * <li> Authenticate-Only (8)
 * <li> Callback-NAS-Prompt (9)
 * <li> Call-Check (10)
 * <li> Callback-Administrative (11)
 * <li> Authorize-Only (17)
 * <li> ChilliSpot-Authorize-Only (0x38df0001)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_ServiceType extends RadiusAttribute
{
    public static final String NAME = "Service-Type";
    public static final long TYPE = 6;

    public static final long serialVersionUID = TYPE;

    public static final Long LoginUser = new Long(1L);
    public static final Long FramedUser = new Long(2L);
    public static final Long CallbackLoginUser = new Long(3L);
    public static final Long CallbackFramedUser = new Long(4L);
    public static final Long OutboundUser = new Long(5L);
    public static final Long AdministrativeUser = new Long(6L);
    public static final Long NASPromptUser = new Long(7L);
    public static final Long AuthenticateOnly = new Long(8L);
    public static final Long CallbackNASPrompt = new Long(9L);
    public static final Long CallCheck = new Long(10L);
    public static final Long CallbackAdministrative = new Long(11L);
    public static final Long AuthorizeOnly = new Long(17L);
    public static final Long ChilliSpotAuthorizeOnly = new Long(0x38df0001L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(17L),new Long(0x38df0001L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Login-User".equals(name)) return new Long(1L);
            if ("Framed-User".equals(name)) return new Long(2L);
            if ("Callback-Login-User".equals(name)) return new Long(3L);
            if ("Callback-Framed-User".equals(name)) return new Long(4L);
            if ("Outbound-User".equals(name)) return new Long(5L);
            if ("Administrative-User".equals(name)) return new Long(6L);
            if ("NAS-Prompt-User".equals(name)) return new Long(7L);
            if ("Authenticate-Only".equals(name)) return new Long(8L);
            if ("Callback-NAS-Prompt".equals(name)) return new Long(9L);
            if ("Call-Check".equals(name)) return new Long(10L);
            if ("Callback-Administrative".equals(name)) return new Long(11L);
            if ("Authorize-Only".equals(name)) return new Long(17L);
            if ("ChilliSpot-Authorize-Only".equals(name)) return new Long(0x38df0001L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "Login-User";
            if (new Long(2L).equals(value)) return "Framed-User";
            if (new Long(3L).equals(value)) return "Callback-Login-User";
            if (new Long(4L).equals(value)) return "Callback-Framed-User";
            if (new Long(5L).equals(value)) return "Outbound-User";
            if (new Long(6L).equals(value)) return "Administrative-User";
            if (new Long(7L).equals(value)) return "NAS-Prompt-User";
            if (new Long(8L).equals(value)) return "Authenticate-Only";
            if (new Long(9L).equals(value)) return "Callback-NAS-Prompt";
            if (new Long(10L).equals(value)) return "Call-Check";
            if (new Long(11L).equals(value)) return "Callback-Administrative";
            if (new Long(17L).equals(value)) return "Authorize-Only";
            if (new Long(0x38df0001L).equals(value)) return "ChilliSpot-Authorize-Only";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 6;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_ServiceType()
    {
        setup();
    }

    public Attr_ServiceType(Serializable o)
    {
        setup(o);
    }
}
