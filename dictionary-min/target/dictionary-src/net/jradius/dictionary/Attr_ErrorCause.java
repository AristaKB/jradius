// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:18 +0530

package net.jradius.dictionary;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.RadiusAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Error-Cause<br>
 * Attribute Type: 101<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Residual-Context-Removed (201)
 * <li> Invalid-EAP-Packet (202)
 * <li> Unsupported-Attribute (401)
 * <li> Missing-Attribute (402)
 * <li> NAS-Identification-Mismatch (403)
 * <li> Invalid-Request (404)
 * <li> Unsupported-Service (405)
 * <li> Unsupported-Extension (406)
 * <li> Administratively-Prohibited (501)
 * <li> Proxy-Request-Not-Routable (502)
 * <li> Session-Context-Not-Found (503)
 * <li> Session-Context-Not-Removable (504)
 * <li> Proxy-Processing-Error (505)
 * <li> Resources-Unavailable (506)
 * <li> Request-Initiated (507)
 * <li> Invalid-Attribute-Value (407)
 * <li> Multiple-Session-Selection-Unsupported (508)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_ErrorCause extends RadiusAttribute
{
    public static final String NAME = "Error-Cause";
    public static final long TYPE = 101;

    public static final long serialVersionUID = TYPE;

    public static final Long ResidualContextRemoved = new Long(201L);
    public static final Long InvalidEAPPacket = new Long(202L);
    public static final Long UnsupportedAttribute = new Long(401L);
    public static final Long MissingAttribute = new Long(402L);
    public static final Long NASIdentificationMismatch = new Long(403L);
    public static final Long InvalidRequest = new Long(404L);
    public static final Long UnsupportedService = new Long(405L);
    public static final Long UnsupportedExtension = new Long(406L);
    public static final Long AdministrativelyProhibited = new Long(501L);
    public static final Long ProxyRequestNotRoutable = new Long(502L);
    public static final Long SessionContextNotFound = new Long(503L);
    public static final Long SessionContextNotRemovable = new Long(504L);
    public static final Long ProxyProcessingError = new Long(505L);
    public static final Long ResourcesUnavailable = new Long(506L);
    public static final Long RequestInitiated = new Long(507L);
    public static final Long InvalidAttributeValue = new Long(407L);
    public static final Long MultipleSessionSelectionUnsupported = new Long(508L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(201L),new Long(202L),new Long(401L),new Long(402L),new Long(403L),new Long(404L),new Long(405L),new Long(406L),new Long(501L),new Long(502L),new Long(503L),new Long(504L),new Long(505L),new Long(506L),new Long(507L),new Long(407L),new Long(508L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Residual-Context-Removed".equals(name)) return new Long(201L);
            if ("Invalid-EAP-Packet".equals(name)) return new Long(202L);
            if ("Unsupported-Attribute".equals(name)) return new Long(401L);
            if ("Missing-Attribute".equals(name)) return new Long(402L);
            if ("NAS-Identification-Mismatch".equals(name)) return new Long(403L);
            if ("Invalid-Request".equals(name)) return new Long(404L);
            if ("Unsupported-Service".equals(name)) return new Long(405L);
            if ("Unsupported-Extension".equals(name)) return new Long(406L);
            if ("Administratively-Prohibited".equals(name)) return new Long(501L);
            if ("Proxy-Request-Not-Routable".equals(name)) return new Long(502L);
            if ("Session-Context-Not-Found".equals(name)) return new Long(503L);
            if ("Session-Context-Not-Removable".equals(name)) return new Long(504L);
            if ("Proxy-Processing-Error".equals(name)) return new Long(505L);
            if ("Resources-Unavailable".equals(name)) return new Long(506L);
            if ("Request-Initiated".equals(name)) return new Long(507L);
            if ("Invalid-Attribute-Value".equals(name)) return new Long(407L);
            if ("Multiple-Session-Selection-Unsupported".equals(name)) return new Long(508L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(201L).equals(value)) return "Residual-Context-Removed";
            if (new Long(202L).equals(value)) return "Invalid-EAP-Packet";
            if (new Long(401L).equals(value)) return "Unsupported-Attribute";
            if (new Long(402L).equals(value)) return "Missing-Attribute";
            if (new Long(403L).equals(value)) return "NAS-Identification-Mismatch";
            if (new Long(404L).equals(value)) return "Invalid-Request";
            if (new Long(405L).equals(value)) return "Unsupported-Service";
            if (new Long(406L).equals(value)) return "Unsupported-Extension";
            if (new Long(501L).equals(value)) return "Administratively-Prohibited";
            if (new Long(502L).equals(value)) return "Proxy-Request-Not-Routable";
            if (new Long(503L).equals(value)) return "Session-Context-Not-Found";
            if (new Long(504L).equals(value)) return "Session-Context-Not-Removable";
            if (new Long(505L).equals(value)) return "Proxy-Processing-Error";
            if (new Long(506L).equals(value)) return "Resources-Unavailable";
            if (new Long(507L).equals(value)) return "Request-Initiated";
            if (new Long(407L).equals(value)) return "Invalid-Attribute-Value";
            if (new Long(508L).equals(value)) return "Multiple-Session-Selection-Unsupported";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 101;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_ErrorCause()
    {
        setup();
    }

    public Attr_ErrorCause(Serializable o)
    {
        setup(o);
    }
}
