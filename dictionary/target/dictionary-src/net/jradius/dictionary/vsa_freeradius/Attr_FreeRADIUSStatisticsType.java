// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Mon, 13 May 2024 11:07:32 +0530

package net.jradius.dictionary.vsa_freeradius;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: FreeRADIUS-Statistics-Type<br>
 * Attribute Type: 26<br>
 * Vendor Id: 11344<br>
 * VSA Type: 127<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> None (0)
 * <li> Authentication (1)
 * <li> Accounting (2)
 * <li> Proxy-Authentication (4)
 * <li> Proxy-Accounting (8)
 * <li> Internal (0x10)
 * <li> Client (0x20)
 * <li> Server (0x40)
 * <li> Home-Server (0x80)
 * <li> Auth-Acct (0x03)
 * <li> Proxy-Auth-Acct (0x0c)
 * <li> All (0x1f)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_FreeRADIUSStatisticsType extends VSAttribute
{
    public static final String NAME = "FreeRADIUS-Statistics-Type";
    public static final int VENDOR_ID = 11344;
    public static final int VSA_TYPE = 127;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long None = new Long(0L);
    public static final Long Authentication = new Long(1L);
    public static final Long Accounting = new Long(2L);
    public static final Long ProxyAuthentication = new Long(4L);
    public static final Long ProxyAccounting = new Long(8L);
    public static final Long Internal = new Long(0x10L);
    public static final Long Client = new Long(0x20L);
    public static final Long Server = new Long(0x40L);
    public static final Long HomeServer = new Long(0x80L);
    public static final Long AuthAcct = new Long(0x03L);
    public static final Long ProxyAuthAcct = new Long(0x0cL);
    public static final Long All = new Long(0x1fL);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(4L),new Long(8L),new Long(0x10L),new Long(0x20L),new Long(0x40L),new Long(0x80L),new Long(0x03L),new Long(0x0cL),new Long(0x1fL)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("None".equals(name)) return new Long(0L);
            if ("Authentication".equals(name)) return new Long(1L);
            if ("Accounting".equals(name)) return new Long(2L);
            if ("Proxy-Authentication".equals(name)) return new Long(4L);
            if ("Proxy-Accounting".equals(name)) return new Long(8L);
            if ("Internal".equals(name)) return new Long(0x10L);
            if ("Client".equals(name)) return new Long(0x20L);
            if ("Server".equals(name)) return new Long(0x40L);
            if ("Home-Server".equals(name)) return new Long(0x80L);
            if ("Auth-Acct".equals(name)) return new Long(0x03L);
            if ("Proxy-Auth-Acct".equals(name)) return new Long(0x0cL);
            if ("All".equals(name)) return new Long(0x1fL);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "None";
            if (new Long(1L).equals(value)) return "Authentication";
            if (new Long(2L).equals(value)) return "Accounting";
            if (new Long(4L).equals(value)) return "Proxy-Authentication";
            if (new Long(8L).equals(value)) return "Proxy-Accounting";
            if (new Long(0x10L).equals(value)) return "Internal";
            if (new Long(0x20L).equals(value)) return "Client";
            if (new Long(0x40L).equals(value)) return "Server";
            if (new Long(0x80L).equals(value)) return "Home-Server";
            if (new Long(0x03L).equals(value)) return "Auth-Acct";
            if (new Long(0x0cL).equals(value)) return "Proxy-Auth-Acct";
            if (new Long(0x1fL).equals(value)) return "All";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_FreeRADIUSStatisticsType()
    {
        setup();
    }

    public Attr_FreeRADIUSStatisticsType(Serializable o)
    {
        setup(o);
    }
}
