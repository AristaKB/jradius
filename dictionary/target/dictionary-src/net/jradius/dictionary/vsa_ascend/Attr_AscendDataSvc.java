// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary.vsa_ascend;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Ascend-Data-Svc<br>
 * Attribute Type: 26<br>
 * Vendor Id: 529<br>
 * VSA Type: 247<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Switched-Voice-Bearer (0)
 * <li> Nailed-56KR (1)
 * <li> Nailed-64K (2)
 * <li> Switched-64KR (3)
 * <li> Switched-56K (4)
 * <li> Switched-384KR (5)
 * <li> Switched-384K (6)
 * <li> Switched-1536K (7)
 * <li> Switched-1536KR (8)
 * <li> Switched-128K (9)
 * <li> Switched-192K (10)
 * <li> Switched-256K (11)
 * <li> Switched-320K (12)
 * <li> Switched-384K-MR (13)
 * <li> Switched-448K (14)
 * <li> Switched-512K (15)
 * <li> Switched-576K (16)
 * <li> Switched-640K (17)
 * <li> Switched-704K (18)
 * <li> Switched-768K (19)
 * <li> Switched-832K (20)
 * <li> Switched-896K (21)
 * <li> Switched-960K (22)
 * <li> Switched-1024K (23)
 * <li> Switched-1088K (24)
 * <li> Switched-1152K (25)
 * <li> Switched-1216K (26)
 * <li> Switched-1280K (27)
 * <li> Switched-1344K (28)
 * <li> Switched-1408K (29)
 * <li> Switched-1472K (30)
 * <li> Switched-1600K (31)
 * <li> Switched-1664K (32)
 * <li> Switched-1728K (33)
 * <li> Switched-1792K (34)
 * <li> Switched-1856K (35)
 * <li> Switched-1920K (36)
 * <li> Switched-inherited (37)
 * <li> Switched-restricted-bearer-x30 (38)
 * <li> Switched-clear-bearer-v110 (39)
 * <li> Switched-restricted-64-x30 (40)
 * <li> Switched-clear-56-v110 (41)
 * <li> Switched-modem (42)
 * <li> Switched-atmodem (43)
 * <li> Switched-V110-24-56 (45)
 * <li> Switched-V110-48-56 (46)
 * <li> Switched-V110-96-56 (47)
 * <li> Switched-V110-192-56 (48)
 * <li> Switched-V110-384-56 (49)
 * <li> Switched-V110-24-56R (50)
 * <li> Switched-V110-48-56R (51)
 * <li> Switched-V110-96-56R (52)
 * <li> Switched-V110-192-56R (53)
 * <li> Switched-V110-384-56R (54)
 * <li> Switched-V110-24-64 (55)
 * <li> Switched-V110-48-64 (56)
 * <li> Switched-V110-96-64 (57)
 * <li> Switched-V110-192-64 (58)
 * <li> Switched-V110-384-64 (59)
 * <li> Switched-V110-24-64R (60)
 * <li> Switched-V110-48-64R (61)
 * <li> Switched-V110-96-64R (62)
 * <li> Switched-V110-384-64R (64)
 * <li> Switched-V110-192-64R (63)
 * <li> Switched-Pots (68)
 * <li> Switched-ATM (69)
 * <li> Switched-FR (70)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_AscendDataSvc extends VSAttribute
{
    public static final String NAME = "Ascend-Data-Svc";
    public static final int VENDOR_ID = 529;
    public static final int VSA_TYPE = 247;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long SwitchedVoiceBearer = new Long(0L);
    public static final Long Nailed56KR = new Long(1L);
    public static final Long Nailed64K = new Long(2L);
    public static final Long Switched64KR = new Long(3L);
    public static final Long Switched56K = new Long(4L);
    public static final Long Switched384KR = new Long(5L);
    public static final Long Switched384K = new Long(6L);
    public static final Long Switched1536K = new Long(7L);
    public static final Long Switched1536KR = new Long(8L);
    public static final Long Switched128K = new Long(9L);
    public static final Long Switched192K = new Long(10L);
    public static final Long Switched256K = new Long(11L);
    public static final Long Switched320K = new Long(12L);
    public static final Long Switched384KMR = new Long(13L);
    public static final Long Switched448K = new Long(14L);
    public static final Long Switched512K = new Long(15L);
    public static final Long Switched576K = new Long(16L);
    public static final Long Switched640K = new Long(17L);
    public static final Long Switched704K = new Long(18L);
    public static final Long Switched768K = new Long(19L);
    public static final Long Switched832K = new Long(20L);
    public static final Long Switched896K = new Long(21L);
    public static final Long Switched960K = new Long(22L);
    public static final Long Switched1024K = new Long(23L);
    public static final Long Switched1088K = new Long(24L);
    public static final Long Switched1152K = new Long(25L);
    public static final Long Switched1216K = new Long(26L);
    public static final Long Switched1280K = new Long(27L);
    public static final Long Switched1344K = new Long(28L);
    public static final Long Switched1408K = new Long(29L);
    public static final Long Switched1472K = new Long(30L);
    public static final Long Switched1600K = new Long(31L);
    public static final Long Switched1664K = new Long(32L);
    public static final Long Switched1728K = new Long(33L);
    public static final Long Switched1792K = new Long(34L);
    public static final Long Switched1856K = new Long(35L);
    public static final Long Switched1920K = new Long(36L);
    public static final Long Switchedinherited = new Long(37L);
    public static final Long Switchedrestrictedbearerx30 = new Long(38L);
    public static final Long Switchedclearbearerv110 = new Long(39L);
    public static final Long Switchedrestricted64x30 = new Long(40L);
    public static final Long Switchedclear56v110 = new Long(41L);
    public static final Long Switchedmodem = new Long(42L);
    public static final Long Switchedatmodem = new Long(43L);
    public static final Long SwitchedV1102456 = new Long(45L);
    public static final Long SwitchedV1104856 = new Long(46L);
    public static final Long SwitchedV1109656 = new Long(47L);
    public static final Long SwitchedV11019256 = new Long(48L);
    public static final Long SwitchedV11038456 = new Long(49L);
    public static final Long SwitchedV1102456R = new Long(50L);
    public static final Long SwitchedV1104856R = new Long(51L);
    public static final Long SwitchedV1109656R = new Long(52L);
    public static final Long SwitchedV11019256R = new Long(53L);
    public static final Long SwitchedV11038456R = new Long(54L);
    public static final Long SwitchedV1102464 = new Long(55L);
    public static final Long SwitchedV1104864 = new Long(56L);
    public static final Long SwitchedV1109664 = new Long(57L);
    public static final Long SwitchedV11019264 = new Long(58L);
    public static final Long SwitchedV11038464 = new Long(59L);
    public static final Long SwitchedV1102464R = new Long(60L);
    public static final Long SwitchedV1104864R = new Long(61L);
    public static final Long SwitchedV1109664R = new Long(62L);
    public static final Long SwitchedV11038464R = new Long(64L);
    public static final Long SwitchedV11019264R = new Long(63L);
    public static final Long SwitchedPots = new Long(68L);
    public static final Long SwitchedATM = new Long(69L);
    public static final Long SwitchedFR = new Long(70L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L),new Long(16L),new Long(17L),new Long(18L),new Long(19L),new Long(20L),new Long(21L),new Long(22L),new Long(23L),new Long(24L),new Long(25L),new Long(26L),new Long(27L),new Long(28L),new Long(29L),new Long(30L),new Long(31L),new Long(32L),new Long(33L),new Long(34L),new Long(35L),new Long(36L),new Long(37L),new Long(38L),new Long(39L),new Long(40L),new Long(41L),new Long(42L),new Long(43L),new Long(45L),new Long(46L),new Long(47L),new Long(48L),new Long(49L),new Long(50L),new Long(51L),new Long(52L),new Long(53L),new Long(54L),new Long(55L),new Long(56L),new Long(57L),new Long(58L),new Long(59L),new Long(60L),new Long(61L),new Long(62L),new Long(64L),new Long(63L),new Long(68L),new Long(69L),new Long(70L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Switched-Voice-Bearer".equals(name)) return new Long(0L);
            if ("Nailed-56KR".equals(name)) return new Long(1L);
            if ("Nailed-64K".equals(name)) return new Long(2L);
            if ("Switched-64KR".equals(name)) return new Long(3L);
            if ("Switched-56K".equals(name)) return new Long(4L);
            if ("Switched-384KR".equals(name)) return new Long(5L);
            if ("Switched-384K".equals(name)) return new Long(6L);
            if ("Switched-1536K".equals(name)) return new Long(7L);
            if ("Switched-1536KR".equals(name)) return new Long(8L);
            if ("Switched-128K".equals(name)) return new Long(9L);
            if ("Switched-192K".equals(name)) return new Long(10L);
            if ("Switched-256K".equals(name)) return new Long(11L);
            if ("Switched-320K".equals(name)) return new Long(12L);
            if ("Switched-384K-MR".equals(name)) return new Long(13L);
            if ("Switched-448K".equals(name)) return new Long(14L);
            if ("Switched-512K".equals(name)) return new Long(15L);
            if ("Switched-576K".equals(name)) return new Long(16L);
            if ("Switched-640K".equals(name)) return new Long(17L);
            if ("Switched-704K".equals(name)) return new Long(18L);
            if ("Switched-768K".equals(name)) return new Long(19L);
            if ("Switched-832K".equals(name)) return new Long(20L);
            if ("Switched-896K".equals(name)) return new Long(21L);
            if ("Switched-960K".equals(name)) return new Long(22L);
            if ("Switched-1024K".equals(name)) return new Long(23L);
            if ("Switched-1088K".equals(name)) return new Long(24L);
            if ("Switched-1152K".equals(name)) return new Long(25L);
            if ("Switched-1216K".equals(name)) return new Long(26L);
            if ("Switched-1280K".equals(name)) return new Long(27L);
            if ("Switched-1344K".equals(name)) return new Long(28L);
            if ("Switched-1408K".equals(name)) return new Long(29L);
            if ("Switched-1472K".equals(name)) return new Long(30L);
            if ("Switched-1600K".equals(name)) return new Long(31L);
            if ("Switched-1664K".equals(name)) return new Long(32L);
            if ("Switched-1728K".equals(name)) return new Long(33L);
            if ("Switched-1792K".equals(name)) return new Long(34L);
            if ("Switched-1856K".equals(name)) return new Long(35L);
            if ("Switched-1920K".equals(name)) return new Long(36L);
            if ("Switched-inherited".equals(name)) return new Long(37L);
            if ("Switched-restricted-bearer-x30".equals(name)) return new Long(38L);
            if ("Switched-clear-bearer-v110".equals(name)) return new Long(39L);
            if ("Switched-restricted-64-x30".equals(name)) return new Long(40L);
            if ("Switched-clear-56-v110".equals(name)) return new Long(41L);
            if ("Switched-modem".equals(name)) return new Long(42L);
            if ("Switched-atmodem".equals(name)) return new Long(43L);
            if ("Switched-V110-24-56".equals(name)) return new Long(45L);
            if ("Switched-V110-48-56".equals(name)) return new Long(46L);
            if ("Switched-V110-96-56".equals(name)) return new Long(47L);
            if ("Switched-V110-192-56".equals(name)) return new Long(48L);
            if ("Switched-V110-384-56".equals(name)) return new Long(49L);
            if ("Switched-V110-24-56R".equals(name)) return new Long(50L);
            if ("Switched-V110-48-56R".equals(name)) return new Long(51L);
            if ("Switched-V110-96-56R".equals(name)) return new Long(52L);
            if ("Switched-V110-192-56R".equals(name)) return new Long(53L);
            if ("Switched-V110-384-56R".equals(name)) return new Long(54L);
            if ("Switched-V110-24-64".equals(name)) return new Long(55L);
            if ("Switched-V110-48-64".equals(name)) return new Long(56L);
            if ("Switched-V110-96-64".equals(name)) return new Long(57L);
            if ("Switched-V110-192-64".equals(name)) return new Long(58L);
            if ("Switched-V110-384-64".equals(name)) return new Long(59L);
            if ("Switched-V110-24-64R".equals(name)) return new Long(60L);
            if ("Switched-V110-48-64R".equals(name)) return new Long(61L);
            if ("Switched-V110-96-64R".equals(name)) return new Long(62L);
            if ("Switched-V110-384-64R".equals(name)) return new Long(64L);
            if ("Switched-V110-192-64R".equals(name)) return new Long(63L);
            if ("Switched-Pots".equals(name)) return new Long(68L);
            if ("Switched-ATM".equals(name)) return new Long(69L);
            if ("Switched-FR".equals(name)) return new Long(70L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "Switched-Voice-Bearer";
            if (new Long(1L).equals(value)) return "Nailed-56KR";
            if (new Long(2L).equals(value)) return "Nailed-64K";
            if (new Long(3L).equals(value)) return "Switched-64KR";
            if (new Long(4L).equals(value)) return "Switched-56K";
            if (new Long(5L).equals(value)) return "Switched-384KR";
            if (new Long(6L).equals(value)) return "Switched-384K";
            if (new Long(7L).equals(value)) return "Switched-1536K";
            if (new Long(8L).equals(value)) return "Switched-1536KR";
            if (new Long(9L).equals(value)) return "Switched-128K";
            if (new Long(10L).equals(value)) return "Switched-192K";
            if (new Long(11L).equals(value)) return "Switched-256K";
            if (new Long(12L).equals(value)) return "Switched-320K";
            if (new Long(13L).equals(value)) return "Switched-384K-MR";
            if (new Long(14L).equals(value)) return "Switched-448K";
            if (new Long(15L).equals(value)) return "Switched-512K";
            if (new Long(16L).equals(value)) return "Switched-576K";
            if (new Long(17L).equals(value)) return "Switched-640K";
            if (new Long(18L).equals(value)) return "Switched-704K";
            if (new Long(19L).equals(value)) return "Switched-768K";
            if (new Long(20L).equals(value)) return "Switched-832K";
            if (new Long(21L).equals(value)) return "Switched-896K";
            if (new Long(22L).equals(value)) return "Switched-960K";
            if (new Long(23L).equals(value)) return "Switched-1024K";
            if (new Long(24L).equals(value)) return "Switched-1088K";
            if (new Long(25L).equals(value)) return "Switched-1152K";
            if (new Long(26L).equals(value)) return "Switched-1216K";
            if (new Long(27L).equals(value)) return "Switched-1280K";
            if (new Long(28L).equals(value)) return "Switched-1344K";
            if (new Long(29L).equals(value)) return "Switched-1408K";
            if (new Long(30L).equals(value)) return "Switched-1472K";
            if (new Long(31L).equals(value)) return "Switched-1600K";
            if (new Long(32L).equals(value)) return "Switched-1664K";
            if (new Long(33L).equals(value)) return "Switched-1728K";
            if (new Long(34L).equals(value)) return "Switched-1792K";
            if (new Long(35L).equals(value)) return "Switched-1856K";
            if (new Long(36L).equals(value)) return "Switched-1920K";
            if (new Long(37L).equals(value)) return "Switched-inherited";
            if (new Long(38L).equals(value)) return "Switched-restricted-bearer-x30";
            if (new Long(39L).equals(value)) return "Switched-clear-bearer-v110";
            if (new Long(40L).equals(value)) return "Switched-restricted-64-x30";
            if (new Long(41L).equals(value)) return "Switched-clear-56-v110";
            if (new Long(42L).equals(value)) return "Switched-modem";
            if (new Long(43L).equals(value)) return "Switched-atmodem";
            if (new Long(45L).equals(value)) return "Switched-V110-24-56";
            if (new Long(46L).equals(value)) return "Switched-V110-48-56";
            if (new Long(47L).equals(value)) return "Switched-V110-96-56";
            if (new Long(48L).equals(value)) return "Switched-V110-192-56";
            if (new Long(49L).equals(value)) return "Switched-V110-384-56";
            if (new Long(50L).equals(value)) return "Switched-V110-24-56R";
            if (new Long(51L).equals(value)) return "Switched-V110-48-56R";
            if (new Long(52L).equals(value)) return "Switched-V110-96-56R";
            if (new Long(53L).equals(value)) return "Switched-V110-192-56R";
            if (new Long(54L).equals(value)) return "Switched-V110-384-56R";
            if (new Long(55L).equals(value)) return "Switched-V110-24-64";
            if (new Long(56L).equals(value)) return "Switched-V110-48-64";
            if (new Long(57L).equals(value)) return "Switched-V110-96-64";
            if (new Long(58L).equals(value)) return "Switched-V110-192-64";
            if (new Long(59L).equals(value)) return "Switched-V110-384-64";
            if (new Long(60L).equals(value)) return "Switched-V110-24-64R";
            if (new Long(61L).equals(value)) return "Switched-V110-48-64R";
            if (new Long(62L).equals(value)) return "Switched-V110-96-64R";
            if (new Long(64L).equals(value)) return "Switched-V110-384-64R";
            if (new Long(63L).equals(value)) return "Switched-V110-192-64R";
            if (new Long(68L).equals(value)) return "Switched-Pots";
            if (new Long(69L).equals(value)) return "Switched-ATM";
            if (new Long(70L).equals(value)) return "Switched-FR";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_AscendDataSvc()
    {
        setup();
    }

    public Attr_AscendDataSvc(Serializable o)
    {
        setup(o);
    }
}
