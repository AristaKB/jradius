// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Mon, 13 May 2024 11:07:32 +0530

package net.jradius.dictionary.vsa_redback;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: PVC-Encapsulation-Type<br>
 * Attribute Type: 26<br>
 * Vendor Id: 2352<br>
 * VSA Type: 39<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> AAA-ENCAPS-ATM-RAW (1)
 * <li> AAA-ENCAPS-ATM-ROUTE1483 (2)
 * <li> AAA-ENCAPS-ATM-AUTO1483 (3)
 * <li> AAA-ENCAPS-ATM-MULTI (4)
 * <li> AAA-ENCAPS-ATM-BRIDGE1483 (5)
 * <li> AAA-ENCAPS-ATM-PPP (6)
 * <li> AAA-ENCAPS-ATM-PPP-SERIAL (7)
 * <li> AAA-ENCAPS-ATM-PPP-NLPID (8)
 * <li> AAA-ENCAPS-ATM-PPP-AUTO (9)
 * <li> AAA-ENCAPS-ATM-PPPOE (10)
 * <li> AAA-ENCAPS-ATM-L2TP (11)
 * <li> AAA-ENCAPS-ATM-PPP-LLC (12)
 * <li> AAA-ENCAPS-FRAME-AUTO1490 (13)
 * <li> AAA-ENCAPS-FRAME-MULTI (14)
 * <li> AAA-ENCAPS-FRAME-BRIDGE1490 (15)
 * <li> AAA-ENCAPS-FRAME-PPP (16)
 * <li> AAA-ENCAPS-FRAME-PPP-AUTO (17)
 * <li> AAA-ENCAPS-FRAME-PPPOE (18)
 * <li> AAA-ENCAPS-FRAME-ROUTE1490 (19)
 * <li> AAA-ENCAPS-FRAME-L2TP (20)
 * <li> AAA-ENCAPS-L2TP-VC-MUXED (21)
 * <li> AAA-ENCAPS-ETH (22)
 * <li> AAA-ENCAPS-ETH-PPPOE (23)
 * <li> AAA-ENCAPS-ETH-MULTI (24)
 * <li> AAA-ENCAPS-ETH-DOT1Q (25)
 * <li> AAA-ENCAPS-ETH-DOT1Q-PPPOE (26)
 * <li> AAA-ENCAPS-ATM-MULTI-PPPOE (27)
 * <li> AAA-ENCAPS-ATM-MULTI-IPV6OE (28)
 * <li> AAA-ENCAPS-ATM-MULTI-PPPOE-N-IPV6OE (29)
 * <li> AAA-ENCAPS-ETH-DOT1Q-TUNNEL (30)
 * <li> AAA-ENCAPS-ETH-DOT1Q-TUNNEL-PPPOE (31)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_PVCEncapsulationType extends VSAttribute
{
    public static final String NAME = "PVC-Encapsulation-Type";
    public static final int VENDOR_ID = 2352;
    public static final int VSA_TYPE = 39;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long AAAENCAPSATMRAW = new Long(1L);
    public static final Long AAAENCAPSATMROUTE1483 = new Long(2L);
    public static final Long AAAENCAPSATMAUTO1483 = new Long(3L);
    public static final Long AAAENCAPSATMMULTI = new Long(4L);
    public static final Long AAAENCAPSATMBRIDGE1483 = new Long(5L);
    public static final Long AAAENCAPSATMPPP = new Long(6L);
    public static final Long AAAENCAPSATMPPPSERIAL = new Long(7L);
    public static final Long AAAENCAPSATMPPPNLPID = new Long(8L);
    public static final Long AAAENCAPSATMPPPAUTO = new Long(9L);
    public static final Long AAAENCAPSATMPPPOE = new Long(10L);
    public static final Long AAAENCAPSATML2TP = new Long(11L);
    public static final Long AAAENCAPSATMPPPLLC = new Long(12L);
    public static final Long AAAENCAPSFRAMEAUTO1490 = new Long(13L);
    public static final Long AAAENCAPSFRAMEMULTI = new Long(14L);
    public static final Long AAAENCAPSFRAMEBRIDGE1490 = new Long(15L);
    public static final Long AAAENCAPSFRAMEPPP = new Long(16L);
    public static final Long AAAENCAPSFRAMEPPPAUTO = new Long(17L);
    public static final Long AAAENCAPSFRAMEPPPOE = new Long(18L);
    public static final Long AAAENCAPSFRAMEROUTE1490 = new Long(19L);
    public static final Long AAAENCAPSFRAMEL2TP = new Long(20L);
    public static final Long AAAENCAPSL2TPVCMUXED = new Long(21L);
    public static final Long AAAENCAPSETH = new Long(22L);
    public static final Long AAAENCAPSETHPPPOE = new Long(23L);
    public static final Long AAAENCAPSETHMULTI = new Long(24L);
    public static final Long AAAENCAPSETHDOT1Q = new Long(25L);
    public static final Long AAAENCAPSETHDOT1QPPPOE = new Long(26L);
    public static final Long AAAENCAPSATMMULTIPPPOE = new Long(27L);
    public static final Long AAAENCAPSATMMULTIIPV6OE = new Long(28L);
    public static final Long AAAENCAPSATMMULTIPPPOENIPV6OE = new Long(29L);
    public static final Long AAAENCAPSETHDOT1QTUNNEL = new Long(30L);
    public static final Long AAAENCAPSETHDOT1QTUNNELPPPOE = new Long(31L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L),new Long(16L),new Long(17L),new Long(18L),new Long(19L),new Long(20L),new Long(21L),new Long(22L),new Long(23L),new Long(24L),new Long(25L),new Long(26L),new Long(27L),new Long(28L),new Long(29L),new Long(30L),new Long(31L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("AAA-ENCAPS-ATM-RAW".equals(name)) return new Long(1L);
            if ("AAA-ENCAPS-ATM-ROUTE1483".equals(name)) return new Long(2L);
            if ("AAA-ENCAPS-ATM-AUTO1483".equals(name)) return new Long(3L);
            if ("AAA-ENCAPS-ATM-MULTI".equals(name)) return new Long(4L);
            if ("AAA-ENCAPS-ATM-BRIDGE1483".equals(name)) return new Long(5L);
            if ("AAA-ENCAPS-ATM-PPP".equals(name)) return new Long(6L);
            if ("AAA-ENCAPS-ATM-PPP-SERIAL".equals(name)) return new Long(7L);
            if ("AAA-ENCAPS-ATM-PPP-NLPID".equals(name)) return new Long(8L);
            if ("AAA-ENCAPS-ATM-PPP-AUTO".equals(name)) return new Long(9L);
            if ("AAA-ENCAPS-ATM-PPPOE".equals(name)) return new Long(10L);
            if ("AAA-ENCAPS-ATM-L2TP".equals(name)) return new Long(11L);
            if ("AAA-ENCAPS-ATM-PPP-LLC".equals(name)) return new Long(12L);
            if ("AAA-ENCAPS-FRAME-AUTO1490".equals(name)) return new Long(13L);
            if ("AAA-ENCAPS-FRAME-MULTI".equals(name)) return new Long(14L);
            if ("AAA-ENCAPS-FRAME-BRIDGE1490".equals(name)) return new Long(15L);
            if ("AAA-ENCAPS-FRAME-PPP".equals(name)) return new Long(16L);
            if ("AAA-ENCAPS-FRAME-PPP-AUTO".equals(name)) return new Long(17L);
            if ("AAA-ENCAPS-FRAME-PPPOE".equals(name)) return new Long(18L);
            if ("AAA-ENCAPS-FRAME-ROUTE1490".equals(name)) return new Long(19L);
            if ("AAA-ENCAPS-FRAME-L2TP".equals(name)) return new Long(20L);
            if ("AAA-ENCAPS-L2TP-VC-MUXED".equals(name)) return new Long(21L);
            if ("AAA-ENCAPS-ETH".equals(name)) return new Long(22L);
            if ("AAA-ENCAPS-ETH-PPPOE".equals(name)) return new Long(23L);
            if ("AAA-ENCAPS-ETH-MULTI".equals(name)) return new Long(24L);
            if ("AAA-ENCAPS-ETH-DOT1Q".equals(name)) return new Long(25L);
            if ("AAA-ENCAPS-ETH-DOT1Q-PPPOE".equals(name)) return new Long(26L);
            if ("AAA-ENCAPS-ATM-MULTI-PPPOE".equals(name)) return new Long(27L);
            if ("AAA-ENCAPS-ATM-MULTI-IPV6OE".equals(name)) return new Long(28L);
            if ("AAA-ENCAPS-ATM-MULTI-PPPOE-N-IPV6OE".equals(name)) return new Long(29L);
            if ("AAA-ENCAPS-ETH-DOT1Q-TUNNEL".equals(name)) return new Long(30L);
            if ("AAA-ENCAPS-ETH-DOT1Q-TUNNEL-PPPOE".equals(name)) return new Long(31L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "AAA-ENCAPS-ATM-RAW";
            if (new Long(2L).equals(value)) return "AAA-ENCAPS-ATM-ROUTE1483";
            if (new Long(3L).equals(value)) return "AAA-ENCAPS-ATM-AUTO1483";
            if (new Long(4L).equals(value)) return "AAA-ENCAPS-ATM-MULTI";
            if (new Long(5L).equals(value)) return "AAA-ENCAPS-ATM-BRIDGE1483";
            if (new Long(6L).equals(value)) return "AAA-ENCAPS-ATM-PPP";
            if (new Long(7L).equals(value)) return "AAA-ENCAPS-ATM-PPP-SERIAL";
            if (new Long(8L).equals(value)) return "AAA-ENCAPS-ATM-PPP-NLPID";
            if (new Long(9L).equals(value)) return "AAA-ENCAPS-ATM-PPP-AUTO";
            if (new Long(10L).equals(value)) return "AAA-ENCAPS-ATM-PPPOE";
            if (new Long(11L).equals(value)) return "AAA-ENCAPS-ATM-L2TP";
            if (new Long(12L).equals(value)) return "AAA-ENCAPS-ATM-PPP-LLC";
            if (new Long(13L).equals(value)) return "AAA-ENCAPS-FRAME-AUTO1490";
            if (new Long(14L).equals(value)) return "AAA-ENCAPS-FRAME-MULTI";
            if (new Long(15L).equals(value)) return "AAA-ENCAPS-FRAME-BRIDGE1490";
            if (new Long(16L).equals(value)) return "AAA-ENCAPS-FRAME-PPP";
            if (new Long(17L).equals(value)) return "AAA-ENCAPS-FRAME-PPP-AUTO";
            if (new Long(18L).equals(value)) return "AAA-ENCAPS-FRAME-PPPOE";
            if (new Long(19L).equals(value)) return "AAA-ENCAPS-FRAME-ROUTE1490";
            if (new Long(20L).equals(value)) return "AAA-ENCAPS-FRAME-L2TP";
            if (new Long(21L).equals(value)) return "AAA-ENCAPS-L2TP-VC-MUXED";
            if (new Long(22L).equals(value)) return "AAA-ENCAPS-ETH";
            if (new Long(23L).equals(value)) return "AAA-ENCAPS-ETH-PPPOE";
            if (new Long(24L).equals(value)) return "AAA-ENCAPS-ETH-MULTI";
            if (new Long(25L).equals(value)) return "AAA-ENCAPS-ETH-DOT1Q";
            if (new Long(26L).equals(value)) return "AAA-ENCAPS-ETH-DOT1Q-PPPOE";
            if (new Long(27L).equals(value)) return "AAA-ENCAPS-ATM-MULTI-PPPOE";
            if (new Long(28L).equals(value)) return "AAA-ENCAPS-ATM-MULTI-IPV6OE";
            if (new Long(29L).equals(value)) return "AAA-ENCAPS-ATM-MULTI-PPPOE-N-IPV6OE";
            if (new Long(30L).equals(value)) return "AAA-ENCAPS-ETH-DOT1Q-TUNNEL";
            if (new Long(31L).equals(value)) return "AAA-ENCAPS-ETH-DOT1Q-TUNNEL-PPPOE";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_PVCEncapsulationType()
    {
        setup();
    }

    public Attr_PVCEncapsulationType(Serializable o)
    {
        setup(o);
    }
}
