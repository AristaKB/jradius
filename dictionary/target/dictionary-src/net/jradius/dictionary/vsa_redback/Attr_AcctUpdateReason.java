// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary.vsa_redback;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Acct-Update-Reason<br>
 * Attribute Type: 26<br>
 * Vendor Id: 2352<br>
 * VSA Type: 144<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> AAA_LOAD_ACCT_SESSION_UP (1)
 * <li> AAA_LOAD_ACCT_SESSION_DOWN (2)
 * <li> AAA_LOAD_ACCT_PERIODIC (3)
 * <li> AAA_LOAD_ACCT_DYN_AC_ENT_START (4)
 * <li> AAA_LOAD_ACCT_DYN_AC_ENT_STOP (5)
 * <li> AAA_LOAD_ACCT_DYN_AC_ENT_TIMEOUT (6)
 * <li> AAA_LOAD_ACCT_SUBSCRIBER_REAUTHOR (7)
 * <li> AAA_LOAD_ACCT_PPP_IPCP_UP (8)
 * <li> AAA_LOAD_ACCT_PPP_MP_LINK_UP (9)
 * <li> AAA_LOAD_ACCT_DHCP_IP_ADDR_GRANTED (10)
 * <li> AAA_LOAD_ACCT_DHCP_IP_ADDR_RELEASED (11)
 * <li> AAA_LOAD_ACCT_ACL_TIMERED_ACTION (12)
 * <li> AAA_LOAD_ACCT_ACL_ACTION (13)
 * <li> AAA_LOAD_ACCT_CMD (14)
 * <li> AAA_LOAD_ACCT_TEST (15)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_AcctUpdateReason extends VSAttribute
{
    public static final String NAME = "Acct-Update-Reason";
    public static final int VENDOR_ID = 2352;
    public static final int VSA_TYPE = 144;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long AAALOADACCTSESSIONUP = new Long(1L);
    public static final Long AAALOADACCTSESSIONDOWN = new Long(2L);
    public static final Long AAALOADACCTPERIODIC = new Long(3L);
    public static final Long AAALOADACCTDYNACENTSTART = new Long(4L);
    public static final Long AAALOADACCTDYNACENTSTOP = new Long(5L);
    public static final Long AAALOADACCTDYNACENTTIMEOUT = new Long(6L);
    public static final Long AAALOADACCTSUBSCRIBERREAUTHOR = new Long(7L);
    public static final Long AAALOADACCTPPPIPCPUP = new Long(8L);
    public static final Long AAALOADACCTPPPMPLINKUP = new Long(9L);
    public static final Long AAALOADACCTDHCPIPADDRGRANTED = new Long(10L);
    public static final Long AAALOADACCTDHCPIPADDRRELEASED = new Long(11L);
    public static final Long AAALOADACCTACLTIMEREDACTION = new Long(12L);
    public static final Long AAALOADACCTACLACTION = new Long(13L);
    public static final Long AAALOADACCTCMD = new Long(14L);
    public static final Long AAALOADACCTTEST = new Long(15L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("AAA_LOAD_ACCT_SESSION_UP".equals(name)) return new Long(1L);
            if ("AAA_LOAD_ACCT_SESSION_DOWN".equals(name)) return new Long(2L);
            if ("AAA_LOAD_ACCT_PERIODIC".equals(name)) return new Long(3L);
            if ("AAA_LOAD_ACCT_DYN_AC_ENT_START".equals(name)) return new Long(4L);
            if ("AAA_LOAD_ACCT_DYN_AC_ENT_STOP".equals(name)) return new Long(5L);
            if ("AAA_LOAD_ACCT_DYN_AC_ENT_TIMEOUT".equals(name)) return new Long(6L);
            if ("AAA_LOAD_ACCT_SUBSCRIBER_REAUTHOR".equals(name)) return new Long(7L);
            if ("AAA_LOAD_ACCT_PPP_IPCP_UP".equals(name)) return new Long(8L);
            if ("AAA_LOAD_ACCT_PPP_MP_LINK_UP".equals(name)) return new Long(9L);
            if ("AAA_LOAD_ACCT_DHCP_IP_ADDR_GRANTED".equals(name)) return new Long(10L);
            if ("AAA_LOAD_ACCT_DHCP_IP_ADDR_RELEASED".equals(name)) return new Long(11L);
            if ("AAA_LOAD_ACCT_ACL_TIMERED_ACTION".equals(name)) return new Long(12L);
            if ("AAA_LOAD_ACCT_ACL_ACTION".equals(name)) return new Long(13L);
            if ("AAA_LOAD_ACCT_CMD".equals(name)) return new Long(14L);
            if ("AAA_LOAD_ACCT_TEST".equals(name)) return new Long(15L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "AAA_LOAD_ACCT_SESSION_UP";
            if (new Long(2L).equals(value)) return "AAA_LOAD_ACCT_SESSION_DOWN";
            if (new Long(3L).equals(value)) return "AAA_LOAD_ACCT_PERIODIC";
            if (new Long(4L).equals(value)) return "AAA_LOAD_ACCT_DYN_AC_ENT_START";
            if (new Long(5L).equals(value)) return "AAA_LOAD_ACCT_DYN_AC_ENT_STOP";
            if (new Long(6L).equals(value)) return "AAA_LOAD_ACCT_DYN_AC_ENT_TIMEOUT";
            if (new Long(7L).equals(value)) return "AAA_LOAD_ACCT_SUBSCRIBER_REAUTHOR";
            if (new Long(8L).equals(value)) return "AAA_LOAD_ACCT_PPP_IPCP_UP";
            if (new Long(9L).equals(value)) return "AAA_LOAD_ACCT_PPP_MP_LINK_UP";
            if (new Long(10L).equals(value)) return "AAA_LOAD_ACCT_DHCP_IP_ADDR_GRANTED";
            if (new Long(11L).equals(value)) return "AAA_LOAD_ACCT_DHCP_IP_ADDR_RELEASED";
            if (new Long(12L).equals(value)) return "AAA_LOAD_ACCT_ACL_TIMERED_ACTION";
            if (new Long(13L).equals(value)) return "AAA_LOAD_ACCT_ACL_ACTION";
            if (new Long(14L).equals(value)) return "AAA_LOAD_ACCT_CMD";
            if (new Long(15L).equals(value)) return "AAA_LOAD_ACCT_TEST";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_AcctUpdateReason()
    {
        setup();
    }

    public Attr_AcctUpdateReason(Serializable o)
    {
        setup(o);
    }
}
