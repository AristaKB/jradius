// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary.vsa_acc;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Acc-Vpsm-Reject-Cause<br>
 * Attribute Type: 26<br>
 * Vendor Id: 5<br>
 * VSA Type: 43<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> No-Access-Partition (1)
 * <li> Access-Partition-Disabled (2)
 * <li> Partition-Portlimit-Exceeded (3)
 * <li> License-Portlimit-Exceeded (4)
 * <li> Home-Server-Down (5)
 * <li> Rejected-By-Home-Server (6)
 * <li> NAS-Administratively-Disabled (7)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_AccVpsmRejectCause extends VSAttribute
{
    public static final String NAME = "Acc-Vpsm-Reject-Cause";
    public static final int VENDOR_ID = 5;
    public static final int VSA_TYPE = 43;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long NoAccessPartition = new Long(1L);
    public static final Long AccessPartitionDisabled = new Long(2L);
    public static final Long PartitionPortlimitExceeded = new Long(3L);
    public static final Long LicensePortlimitExceeded = new Long(4L);
    public static final Long HomeServerDown = new Long(5L);
    public static final Long RejectedByHomeServer = new Long(6L);
    public static final Long NASAdministrativelyDisabled = new Long(7L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("No-Access-Partition".equals(name)) return new Long(1L);
            if ("Access-Partition-Disabled".equals(name)) return new Long(2L);
            if ("Partition-Portlimit-Exceeded".equals(name)) return new Long(3L);
            if ("License-Portlimit-Exceeded".equals(name)) return new Long(4L);
            if ("Home-Server-Down".equals(name)) return new Long(5L);
            if ("Rejected-By-Home-Server".equals(name)) return new Long(6L);
            if ("NAS-Administratively-Disabled".equals(name)) return new Long(7L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "No-Access-Partition";
            if (new Long(2L).equals(value)) return "Access-Partition-Disabled";
            if (new Long(3L).equals(value)) return "Partition-Portlimit-Exceeded";
            if (new Long(4L).equals(value)) return "License-Portlimit-Exceeded";
            if (new Long(5L).equals(value)) return "Home-Server-Down";
            if (new Long(6L).equals(value)) return "Rejected-By-Home-Server";
            if (new Long(7L).equals(value)) return "NAS-Administratively-Disabled";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_AccVpsmRejectCause()
    {
        setup();
    }

    public Attr_AccVpsmRejectCause(Serializable o)
    {
        setup(o);
    }
}
