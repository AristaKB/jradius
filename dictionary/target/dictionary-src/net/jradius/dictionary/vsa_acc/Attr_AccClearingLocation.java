// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Mon, 13 May 2024 11:07:32 +0530

package net.jradius.dictionary.vsa_acc;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Acc-Clearing-Location<br>
 * Attribute Type: 26<br>
 * Vendor Id: 5<br>
 * VSA Type: 16<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Local-or-remote-user (0)
 * <li> Prvte-ntwork-serving-local-user (1)
 * <li> Pblic-ntwork-serving-local-user (2)
 * <li> Transit-network (3)
 * <li> Prvte-ntwork-serv-remote-user (4)
 * <li> Pblic-ntwork-serv-remote-user (5)
 * <li> International-network (6)
 * <li> Beyond-interworking-point (10)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_AccClearingLocation extends VSAttribute
{
    public static final String NAME = "Acc-Clearing-Location";
    public static final int VENDOR_ID = 5;
    public static final int VSA_TYPE = 16;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long Localorremoteuser = new Long(0L);
    public static final Long Prvtentworkservinglocaluser = new Long(1L);
    public static final Long Pblicntworkservinglocaluser = new Long(2L);
    public static final Long Transitnetwork = new Long(3L);
    public static final Long Prvtentworkservremoteuser = new Long(4L);
    public static final Long Pblicntworkservremoteuser = new Long(5L);
    public static final Long Internationalnetwork = new Long(6L);
    public static final Long Beyondinterworkingpoint = new Long(10L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(10L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Local-or-remote-user".equals(name)) return new Long(0L);
            if ("Prvte-ntwork-serving-local-user".equals(name)) return new Long(1L);
            if ("Pblic-ntwork-serving-local-user".equals(name)) return new Long(2L);
            if ("Transit-network".equals(name)) return new Long(3L);
            if ("Prvte-ntwork-serv-remote-user".equals(name)) return new Long(4L);
            if ("Pblic-ntwork-serv-remote-user".equals(name)) return new Long(5L);
            if ("International-network".equals(name)) return new Long(6L);
            if ("Beyond-interworking-point".equals(name)) return new Long(10L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "Local-or-remote-user";
            if (new Long(1L).equals(value)) return "Prvte-ntwork-serving-local-user";
            if (new Long(2L).equals(value)) return "Pblic-ntwork-serving-local-user";
            if (new Long(3L).equals(value)) return "Transit-network";
            if (new Long(4L).equals(value)) return "Prvte-ntwork-serv-remote-user";
            if (new Long(5L).equals(value)) return "Pblic-ntwork-serv-remote-user";
            if (new Long(6L).equals(value)) return "International-network";
            if (new Long(10L).equals(value)) return "Beyond-interworking-point";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_AccClearingLocation()
    {
        setup();
    }

    public Attr_AccClearingLocation(Serializable o)
    {
        setup(o);
    }
}
