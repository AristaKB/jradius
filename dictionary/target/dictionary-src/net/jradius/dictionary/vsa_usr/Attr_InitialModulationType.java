// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary.vsa_usr;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Initial-Modulation-Type<br>
 * Attribute Type: 26<br>
 * Vendor Id: 429<br>
 * VSA Type: 0x0923<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> usRoboticsHST (1)
 * <li> ccittV32 (2)
 * <li> ccittV22bis (3)
 * <li> bell103 (4)
 * <li> ccittV21 (5)
 * <li> bell212 (6)
 * <li> ccittV32bis (7)
 * <li> ccittV23 (8)
 * <li> negotiationFailed (9)
 * <li> bell208b (10)
 * <li> v21FaxClass1 (11)
 * <li> v27FaxClass1 (12)
 * <li> v29FaxClass1 (13)
 * <li> v17FaxClass1 (14)
 * <li> v21FaxClass2 (15)
 * <li> v27FaxClass2 (16)
 * <li> v29FaxClass2 (17)
 * <li> v17FaxClass2 (18)
 * <li> v32Terbo (19)
 * <li> v34 (20)
 * <li> vFC (21)
 * <li> v34plus (22)
 * <li> x2 (23)
 * <li> v110 (24)
 * <li> v120 (25)
 * <li> x75 (26)
 * <li> asyncSyncPPP (27)
 * <li> clearChannel (28)
 * <li> x2client (29)
 * <li> x2symmetric (30)
 * <li> piafs (31)
 * <li> x2version2 (32)
 * <li> v90Analogue (33)
 * <li> v90Digital (34)
 * <li> v90AllDigital (35)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_InitialModulationType extends VSAttribute
{
    public static final String NAME = "Initial-Modulation-Type";
    public static final int VENDOR_ID = 429;
    public static final int VSA_TYPE = 0x0923;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long usRoboticsHST = new Long(1L);
    public static final Long ccittV32 = new Long(2L);
    public static final Long ccittV22bis = new Long(3L);
    public static final Long bell103 = new Long(4L);
    public static final Long ccittV21 = new Long(5L);
    public static final Long bell212 = new Long(6L);
    public static final Long ccittV32bis = new Long(7L);
    public static final Long ccittV23 = new Long(8L);
    public static final Long negotiationFailed = new Long(9L);
    public static final Long bell208b = new Long(10L);
    public static final Long v21FaxClass1 = new Long(11L);
    public static final Long v27FaxClass1 = new Long(12L);
    public static final Long v29FaxClass1 = new Long(13L);
    public static final Long v17FaxClass1 = new Long(14L);
    public static final Long v21FaxClass2 = new Long(15L);
    public static final Long v27FaxClass2 = new Long(16L);
    public static final Long v29FaxClass2 = new Long(17L);
    public static final Long v17FaxClass2 = new Long(18L);
    public static final Long v32Terbo = new Long(19L);
    public static final Long v34 = new Long(20L);
    public static final Long vFC = new Long(21L);
    public static final Long v34plus = new Long(22L);
    public static final Long x2 = new Long(23L);
    public static final Long v110 = new Long(24L);
    public static final Long v120 = new Long(25L);
    public static final Long x75 = new Long(26L);
    public static final Long asyncSyncPPP = new Long(27L);
    public static final Long clearChannel = new Long(28L);
    public static final Long x2client = new Long(29L);
    public static final Long x2symmetric = new Long(30L);
    public static final Long piafs = new Long(31L);
    public static final Long x2version2 = new Long(32L);
    public static final Long v90Analogue = new Long(33L);
    public static final Long v90Digital = new Long(34L);
    public static final Long v90AllDigital = new Long(35L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L),new Long(16L),new Long(17L),new Long(18L),new Long(19L),new Long(20L),new Long(21L),new Long(22L),new Long(23L),new Long(24L),new Long(25L),new Long(26L),new Long(27L),new Long(28L),new Long(29L),new Long(30L),new Long(31L),new Long(32L),new Long(33L),new Long(34L),new Long(35L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("usRoboticsHST".equals(name)) return new Long(1L);
            if ("ccittV32".equals(name)) return new Long(2L);
            if ("ccittV22bis".equals(name)) return new Long(3L);
            if ("bell103".equals(name)) return new Long(4L);
            if ("ccittV21".equals(name)) return new Long(5L);
            if ("bell212".equals(name)) return new Long(6L);
            if ("ccittV32bis".equals(name)) return new Long(7L);
            if ("ccittV23".equals(name)) return new Long(8L);
            if ("negotiationFailed".equals(name)) return new Long(9L);
            if ("bell208b".equals(name)) return new Long(10L);
            if ("v21FaxClass1".equals(name)) return new Long(11L);
            if ("v27FaxClass1".equals(name)) return new Long(12L);
            if ("v29FaxClass1".equals(name)) return new Long(13L);
            if ("v17FaxClass1".equals(name)) return new Long(14L);
            if ("v21FaxClass2".equals(name)) return new Long(15L);
            if ("v27FaxClass2".equals(name)) return new Long(16L);
            if ("v29FaxClass2".equals(name)) return new Long(17L);
            if ("v17FaxClass2".equals(name)) return new Long(18L);
            if ("v32Terbo".equals(name)) return new Long(19L);
            if ("v34".equals(name)) return new Long(20L);
            if ("vFC".equals(name)) return new Long(21L);
            if ("v34plus".equals(name)) return new Long(22L);
            if ("x2".equals(name)) return new Long(23L);
            if ("v110".equals(name)) return new Long(24L);
            if ("v120".equals(name)) return new Long(25L);
            if ("x75".equals(name)) return new Long(26L);
            if ("asyncSyncPPP".equals(name)) return new Long(27L);
            if ("clearChannel".equals(name)) return new Long(28L);
            if ("x2client".equals(name)) return new Long(29L);
            if ("x2symmetric".equals(name)) return new Long(30L);
            if ("piafs".equals(name)) return new Long(31L);
            if ("x2version2".equals(name)) return new Long(32L);
            if ("v90Analogue".equals(name)) return new Long(33L);
            if ("v90Digital".equals(name)) return new Long(34L);
            if ("v90AllDigital".equals(name)) return new Long(35L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "usRoboticsHST";
            if (new Long(2L).equals(value)) return "ccittV32";
            if (new Long(3L).equals(value)) return "ccittV22bis";
            if (new Long(4L).equals(value)) return "bell103";
            if (new Long(5L).equals(value)) return "ccittV21";
            if (new Long(6L).equals(value)) return "bell212";
            if (new Long(7L).equals(value)) return "ccittV32bis";
            if (new Long(8L).equals(value)) return "ccittV23";
            if (new Long(9L).equals(value)) return "negotiationFailed";
            if (new Long(10L).equals(value)) return "bell208b";
            if (new Long(11L).equals(value)) return "v21FaxClass1";
            if (new Long(12L).equals(value)) return "v27FaxClass1";
            if (new Long(13L).equals(value)) return "v29FaxClass1";
            if (new Long(14L).equals(value)) return "v17FaxClass1";
            if (new Long(15L).equals(value)) return "v21FaxClass2";
            if (new Long(16L).equals(value)) return "v27FaxClass2";
            if (new Long(17L).equals(value)) return "v29FaxClass2";
            if (new Long(18L).equals(value)) return "v17FaxClass2";
            if (new Long(19L).equals(value)) return "v32Terbo";
            if (new Long(20L).equals(value)) return "v34";
            if (new Long(21L).equals(value)) return "vFC";
            if (new Long(22L).equals(value)) return "v34plus";
            if (new Long(23L).equals(value)) return "x2";
            if (new Long(24L).equals(value)) return "v110";
            if (new Long(25L).equals(value)) return "v120";
            if (new Long(26L).equals(value)) return "x75";
            if (new Long(27L).equals(value)) return "asyncSyncPPP";
            if (new Long(28L).equals(value)) return "clearChannel";
            if (new Long(29L).equals(value)) return "x2client";
            if (new Long(30L).equals(value)) return "x2symmetric";
            if (new Long(31L).equals(value)) return "piafs";
            if (new Long(32L).equals(value)) return "x2version2";
            if (new Long(33L).equals(value)) return "v90Analogue";
            if (new Long(34L).equals(value)) return "v90Digital";
            if (new Long(35L).equals(value)) return "v90AllDigital";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        setFormat("4,0");
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_InitialModulationType()
    {
        setup();
    }

    public Attr_InitialModulationType(Serializable o)
    {
        setup(o);
    }
}
