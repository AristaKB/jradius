// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Mon, 13 May 2024 11:07:32 +0530

package net.jradius.dictionary.vsa_cablelabs;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: CableLabs-Event-Message<br>
 * Attribute Type: 26<br>
 * Vendor Id: 4491<br>
 * VSA Type: 1<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Reserved (0)
 * <li> Signaling-Start (1)
 * <li> Signaling-Stop (2)
 * <li> Database-Query (3)
 * <li> Intelligent-Peripheral-Usage-Start (4)
 * <li> Intelligent-Peripheral-Usage-Stop (5)
 * <li> Service-Instance (6)
 * <li> QoS-Reserve (7)
 * <li> QoS-Release (8)
 * <li> Service-Activation (9)
 * <li> Service-Deactivation (10)
 * <li> Media-Report (11)
 * <li> Signal-Instance (12)
 * <li> Interconnect-Signaling-Start (13)
 * <li> Interconnect-Signaling-Stop (14)
 * <li> Call-Answer (15)
 * <li> Call-Disconnect (16)
 * <li> Time-Change (17)
 * <li> QoS-Commit (19)
 * <li> Media-Alive (20)
 * <li> Policy-Request (31)
 * <li> Policy-Delete (32)
 * <li> Policy-Update (33)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_CableLabsEventMessage extends VSAttribute
{
    public static final String NAME = "CableLabs-Event-Message";
    public static final int VENDOR_ID = 4491;
    public static final int VSA_TYPE = 1;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long Reserved = new Long(0L);
    public static final Long SignalingStart = new Long(1L);
    public static final Long SignalingStop = new Long(2L);
    public static final Long DatabaseQuery = new Long(3L);
    public static final Long IntelligentPeripheralUsageStart = new Long(4L);
    public static final Long IntelligentPeripheralUsageStop = new Long(5L);
    public static final Long ServiceInstance = new Long(6L);
    public static final Long QoSReserve = new Long(7L);
    public static final Long QoSRelease = new Long(8L);
    public static final Long ServiceActivation = new Long(9L);
    public static final Long ServiceDeactivation = new Long(10L);
    public static final Long MediaReport = new Long(11L);
    public static final Long SignalInstance = new Long(12L);
    public static final Long InterconnectSignalingStart = new Long(13L);
    public static final Long InterconnectSignalingStop = new Long(14L);
    public static final Long CallAnswer = new Long(15L);
    public static final Long CallDisconnect = new Long(16L);
    public static final Long TimeChange = new Long(17L);
    public static final Long QoSCommit = new Long(19L);
    public static final Long MediaAlive = new Long(20L);
    public static final Long PolicyRequest = new Long(31L);
    public static final Long PolicyDelete = new Long(32L);
    public static final Long PolicyUpdate = new Long(33L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L),new Long(16L),new Long(17L),new Long(19L),new Long(20L),new Long(31L),new Long(32L),new Long(33L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Reserved".equals(name)) return new Long(0L);
            if ("Signaling-Start".equals(name)) return new Long(1L);
            if ("Signaling-Stop".equals(name)) return new Long(2L);
            if ("Database-Query".equals(name)) return new Long(3L);
            if ("Intelligent-Peripheral-Usage-Start".equals(name)) return new Long(4L);
            if ("Intelligent-Peripheral-Usage-Stop".equals(name)) return new Long(5L);
            if ("Service-Instance".equals(name)) return new Long(6L);
            if ("QoS-Reserve".equals(name)) return new Long(7L);
            if ("QoS-Release".equals(name)) return new Long(8L);
            if ("Service-Activation".equals(name)) return new Long(9L);
            if ("Service-Deactivation".equals(name)) return new Long(10L);
            if ("Media-Report".equals(name)) return new Long(11L);
            if ("Signal-Instance".equals(name)) return new Long(12L);
            if ("Interconnect-Signaling-Start".equals(name)) return new Long(13L);
            if ("Interconnect-Signaling-Stop".equals(name)) return new Long(14L);
            if ("Call-Answer".equals(name)) return new Long(15L);
            if ("Call-Disconnect".equals(name)) return new Long(16L);
            if ("Time-Change".equals(name)) return new Long(17L);
            if ("QoS-Commit".equals(name)) return new Long(19L);
            if ("Media-Alive".equals(name)) return new Long(20L);
            if ("Policy-Request".equals(name)) return new Long(31L);
            if ("Policy-Delete".equals(name)) return new Long(32L);
            if ("Policy-Update".equals(name)) return new Long(33L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "Reserved";
            if (new Long(1L).equals(value)) return "Signaling-Start";
            if (new Long(2L).equals(value)) return "Signaling-Stop";
            if (new Long(3L).equals(value)) return "Database-Query";
            if (new Long(4L).equals(value)) return "Intelligent-Peripheral-Usage-Start";
            if (new Long(5L).equals(value)) return "Intelligent-Peripheral-Usage-Stop";
            if (new Long(6L).equals(value)) return "Service-Instance";
            if (new Long(7L).equals(value)) return "QoS-Reserve";
            if (new Long(8L).equals(value)) return "QoS-Release";
            if (new Long(9L).equals(value)) return "Service-Activation";
            if (new Long(10L).equals(value)) return "Service-Deactivation";
            if (new Long(11L).equals(value)) return "Media-Report";
            if (new Long(12L).equals(value)) return "Signal-Instance";
            if (new Long(13L).equals(value)) return "Interconnect-Signaling-Start";
            if (new Long(14L).equals(value)) return "Interconnect-Signaling-Stop";
            if (new Long(15L).equals(value)) return "Call-Answer";
            if (new Long(16L).equals(value)) return "Call-Disconnect";
            if (new Long(17L).equals(value)) return "Time-Change";
            if (new Long(19L).equals(value)) return "QoS-Commit";
            if (new Long(20L).equals(value)) return "Media-Alive";
            if (new Long(31L).equals(value)) return "Policy-Request";
            if (new Long(32L).equals(value)) return "Policy-Delete";
            if (new Long(33L).equals(value)) return "Policy-Update";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_CableLabsEventMessage()
    {
        setup();
    }

    public Attr_CableLabsEventMessage(Serializable o)
    {
        setup(o);
    }
}
