// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.RadiusAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Auth-Type<br>
 * Attribute Type: 1000 (FreeRADIUS Internal Attribute)<br><br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> Local (0)
 * <li> System (1)
 * <li> SecurID (2)
 * <li> Crypt-Local (3)
 * <li> Reject (4)
 * <li> ActivCard (5)
 * <li> EAP (6)
 * <li> ARAP (7)
 * <li> Accept (254)
 * <li> PAP (1024)
 * <li> CHAP (1025)
 * <li> PAM (1027)
 * <li> MS-CHAP (1028)
 * <li> MSCHAP (1028)
 * <li> Kerberos (1029)
 * <li> CRAM (1030)
 * <li> NS-MTA-MD5 (1031)
 * <li> SMB (1033)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_AuthType extends RadiusAttribute
{
    public static final String NAME = "Auth-Type";
    public static final long TYPE = 1000;

    public static final long serialVersionUID = TYPE;

    public static final Long Local = new Long(0L);
    public static final Long System = new Long(1L);
    public static final Long SecurID = new Long(2L);
    public static final Long CryptLocal = new Long(3L);
    public static final Long Reject = new Long(4L);
    public static final Long ActivCard = new Long(5L);
    public static final Long EAP = new Long(6L);
    public static final Long ARAP = new Long(7L);
    public static final Long Accept = new Long(254L);
    public static final Long PAP = new Long(1024L);
    public static final Long CHAP = new Long(1025L);
    public static final Long PAM = new Long(1027L);
    public static final Long MSCHAP = new Long(1028L);
    public static final Long Kerberos = new Long(1029L);
    public static final Long CRAM = new Long(1030L);
    public static final Long NSMTAMD5 = new Long(1031L);
    public static final Long SMB = new Long(1033L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(254L),new Long(1024L),new Long(1025L),new Long(1027L),new Long(1028L),new Long(1029L),new Long(1030L),new Long(1031L),new Long(1033L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("Local".equals(name)) return new Long(0L);
            if ("System".equals(name)) return new Long(1L);
            if ("SecurID".equals(name)) return new Long(2L);
            if ("Crypt-Local".equals(name)) return new Long(3L);
            if ("Reject".equals(name)) return new Long(4L);
            if ("ActivCard".equals(name)) return new Long(5L);
            if ("EAP".equals(name)) return new Long(6L);
            if ("ARAP".equals(name)) return new Long(7L);
            if ("Accept".equals(name)) return new Long(254L);
            if ("PAP".equals(name)) return new Long(1024L);
            if ("CHAP".equals(name)) return new Long(1025L);
            if ("PAM".equals(name)) return new Long(1027L);
            if ("MS-CHAP".equals(name)) return new Long(1028L);
            if ("MSCHAP".equals(name)) return new Long(1028L);
            if ("Kerberos".equals(name)) return new Long(1029L);
            if ("CRAM".equals(name)) return new Long(1030L);
            if ("NS-MTA-MD5".equals(name)) return new Long(1031L);
            if ("SMB".equals(name)) return new Long(1033L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "Local";
            if (new Long(1L).equals(value)) return "System";
            if (new Long(2L).equals(value)) return "SecurID";
            if (new Long(3L).equals(value)) return "Crypt-Local";
            if (new Long(4L).equals(value)) return "Reject";
            if (new Long(5L).equals(value)) return "ActivCard";
            if (new Long(6L).equals(value)) return "EAP";
            if (new Long(7L).equals(value)) return "ARAP";
            if (new Long(254L).equals(value)) return "Accept";
            if (new Long(1024L).equals(value)) return "PAP";
            if (new Long(1025L).equals(value)) return "CHAP";
            if (new Long(1027L).equals(value)) return "PAM";
            if (new Long(1028L).equals(value)) return "MS-CHAP";
            if (new Long(1029L).equals(value)) return "Kerberos";
            if (new Long(1030L).equals(value)) return "CRAM";
            if (new Long(1031L).equals(value)) return "NS-MTA-MD5";
            if (new Long(1033L).equals(value)) return "SMB";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 1000;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_AuthType()
    {
        setup();
    }

    public Attr_AuthType(Serializable o)
    {
        setup(o);
    }
}
