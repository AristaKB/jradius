// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Tue, 14 May 2024 12:35:13 +0530

package net.jradius.dictionary;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.RadiusAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: EAP-IKEv2-IDType<br>
 * Attribute Type: 1103 (FreeRADIUS Internal Attribute)<br><br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> IPV4_ADDR (1)
 * <li> FQDN (2)
 * <li> RFC822_ADDR (3)
 * <li> IPV6_ADDR (5)
 * <li> DER_ASN1_DN (9)
 * <li> DER_ASN1_GN (10)
 * <li> KEY_ID (11)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_EAPIKEv2IDType extends RadiusAttribute
{
    public static final String NAME = "EAP-IKEv2-IDType";
    public static final long TYPE = 1103;

    public static final long serialVersionUID = TYPE;

    public static final Long IPV4ADDR = new Long(1L);
    public static final Long FQDN = new Long(2L);
    public static final Long RFC822ADDR = new Long(3L);
    public static final Long IPV6ADDR = new Long(5L);
    public static final Long DERASN1DN = new Long(9L);
    public static final Long DERASN1GN = new Long(10L);
    public static final Long KEYID = new Long(11L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(1L),new Long(2L),new Long(3L),new Long(5L),new Long(9L),new Long(10L),new Long(11L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("IPV4_ADDR".equals(name)) return new Long(1L);
            if ("FQDN".equals(name)) return new Long(2L);
            if ("RFC822_ADDR".equals(name)) return new Long(3L);
            if ("IPV6_ADDR".equals(name)) return new Long(5L);
            if ("DER_ASN1_DN".equals(name)) return new Long(9L);
            if ("DER_ASN1_GN".equals(name)) return new Long(10L);
            if ("KEY_ID".equals(name)) return new Long(11L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(1L).equals(value)) return "IPV4_ADDR";
            if (new Long(2L).equals(value)) return "FQDN";
            if (new Long(3L).equals(value)) return "RFC822_ADDR";
            if (new Long(5L).equals(value)) return "IPV6_ADDR";
            if (new Long(9L).equals(value)) return "DER_ASN1_DN";
            if (new Long(10L).equals(value)) return "DER_ASN1_GN";
            if (new Long(11L).equals(value)) return "KEY_ID";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 1103;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_EAPIKEv2IDType()
    {
        setup();
    }

    public Attr_EAPIKEv2IDType(Serializable o)
    {
        setup(o);
    }
}
