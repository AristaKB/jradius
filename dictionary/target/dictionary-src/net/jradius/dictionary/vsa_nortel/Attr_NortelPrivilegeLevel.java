// DO NOT EDIT THIS FILE DIRECTLY! - AUTOMATICALLY GENERATED
// Generated by: class net.jradius.freeradius.RadiusDictionary
// Generated on: Mon, 13 May 2024 11:07:32 +0530

package net.jradius.dictionary.vsa_nortel;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.Map;

import net.jradius.packet.attribute.VSAttribute;
import net.jradius.packet.attribute.value.NamedValue;

/**
 * Attribute Name: Nortel-Privilege-Level<br>
 * Attribute Type: 26<br>
 * Vendor Id: 562<br>
 * VSA Type: 166<br>
 * Value Type: NamedValue<br>
 * Possible Values: <br>
 * <ul>
 * <li> VoiceMailAdmin (0)
 * <li> ContactCenter (1)
 * <li> SBAInstaller (2)
 * <li> SBASystemCoord (3)
 * <li> SBASystemCoordBasic (4)
 * <li> SBABasic (5)
 * <li> Security (6)
 * <li> CTEApp (7)
 * <li> SBA-IPSetRegistration (8)
 * <li> Application-BCMMonitor (9)
 * <li> CDRApp (10)
 * <li> ModemLogin (11)
 * <li> GuestLogin (12)
 * <li> AdminDownload (13)
 * <li> ExclusiveAccess (14)
 * <li> Admin (15)
 * <li> DataAdmin (16)
 * <li> RemoteAccess (17)
 * <li> Guest (18)
 * <li> VoiceAdmin (19)
 * <li> BackupOperator (20)
 * <li> RemoteMonitoring (21)
 * <li> SoftwareUpgrade (22)
 * <li> AlarmViewer (24)
 * <li> OperationalLogs (26)
 * <li> DiagnosticLogs (27)
 * <li> ApplicationIVR (28)
 * <li> ISDN-Dial-in (30)
 * <li> WAN-Dial-in (32)
 * <li> System-SerialPort (36)
 * </ul>
 *
 * @author class net.jradius.freeradius.RadiusDictionary
 */
public final class Attr_NortelPrivilegeLevel extends VSAttribute
{
    public static final String NAME = "Nortel-Privilege-Level";
    public static final int VENDOR_ID = 562;
    public static final int VSA_TYPE = 166;
    public static final long TYPE = ((VENDOR_ID & 0xFFFF) << 16) | VSA_TYPE;

    public static final long serialVersionUID = TYPE;

    public static final Long VoiceMailAdmin = new Long(0L);
    public static final Long ContactCenter = new Long(1L);
    public static final Long SBAInstaller = new Long(2L);
    public static final Long SBASystemCoord = new Long(3L);
    public static final Long SBASystemCoordBasic = new Long(4L);
    public static final Long SBABasic = new Long(5L);
    public static final Long Security = new Long(6L);
    public static final Long CTEApp = new Long(7L);
    public static final Long SBAIPSetRegistration = new Long(8L);
    public static final Long ApplicationBCMMonitor = new Long(9L);
    public static final Long CDRApp = new Long(10L);
    public static final Long ModemLogin = new Long(11L);
    public static final Long GuestLogin = new Long(12L);
    public static final Long AdminDownload = new Long(13L);
    public static final Long ExclusiveAccess = new Long(14L);
    public static final Long Admin = new Long(15L);
    public static final Long DataAdmin = new Long(16L);
    public static final Long RemoteAccess = new Long(17L);
    public static final Long Guest = new Long(18L);
    public static final Long VoiceAdmin = new Long(19L);
    public static final Long BackupOperator = new Long(20L);
    public static final Long RemoteMonitoring = new Long(21L);
    public static final Long SoftwareUpgrade = new Long(22L);
    public static final Long AlarmViewer = new Long(24L);
    public static final Long OperationalLogs = new Long(26L);
    public static final Long DiagnosticLogs = new Long(27L);
    public static final Long ApplicationIVR = new Long(28L);
    public static final Long ISDNDialin = new Long(30L);
    public static final Long WANDialin = new Long(32L);
    public static final Long SystemSerialPort = new Long(36L);

    @SuppressWarnings("serial")
    protected class NamedValueMap implements NamedValue.NamedValueMap, Serializable
    {
        public Long[] knownValues = { new Long(0L),new Long(1L),new Long(2L),new Long(3L),new Long(4L),new Long(5L),new Long(6L),new Long(7L),new Long(8L),new Long(9L),new Long(10L),new Long(11L),new Long(12L),new Long(13L),new Long(14L),new Long(15L),new Long(16L),new Long(17L),new Long(18L),new Long(19L),new Long(20L),new Long(21L),new Long(22L),new Long(24L),new Long(26L),new Long(27L),new Long(28L),new Long(30L),new Long(32L),new Long(36L)};

        public Long[] getKnownValues() { return knownValues; }

        public Long getNamedValue(String name)
        {
            if ("VoiceMailAdmin".equals(name)) return new Long(0L);
            if ("ContactCenter".equals(name)) return new Long(1L);
            if ("SBAInstaller".equals(name)) return new Long(2L);
            if ("SBASystemCoord".equals(name)) return new Long(3L);
            if ("SBASystemCoordBasic".equals(name)) return new Long(4L);
            if ("SBABasic".equals(name)) return new Long(5L);
            if ("Security".equals(name)) return new Long(6L);
            if ("CTEApp".equals(name)) return new Long(7L);
            if ("SBA-IPSetRegistration".equals(name)) return new Long(8L);
            if ("Application-BCMMonitor".equals(name)) return new Long(9L);
            if ("CDRApp".equals(name)) return new Long(10L);
            if ("ModemLogin".equals(name)) return new Long(11L);
            if ("GuestLogin".equals(name)) return new Long(12L);
            if ("AdminDownload".equals(name)) return new Long(13L);
            if ("ExclusiveAccess".equals(name)) return new Long(14L);
            if ("Admin".equals(name)) return new Long(15L);
            if ("DataAdmin".equals(name)) return new Long(16L);
            if ("RemoteAccess".equals(name)) return new Long(17L);
            if ("Guest".equals(name)) return new Long(18L);
            if ("VoiceAdmin".equals(name)) return new Long(19L);
            if ("BackupOperator".equals(name)) return new Long(20L);
            if ("RemoteMonitoring".equals(name)) return new Long(21L);
            if ("SoftwareUpgrade".equals(name)) return new Long(22L);
            if ("AlarmViewer".equals(name)) return new Long(24L);
            if ("OperationalLogs".equals(name)) return new Long(26L);
            if ("DiagnosticLogs".equals(name)) return new Long(27L);
            if ("ApplicationIVR".equals(name)) return new Long(28L);
            if ("ISDN-Dial-in".equals(name)) return new Long(30L);
            if ("WAN-Dial-in".equals(name)) return new Long(32L);
            if ("System-SerialPort".equals(name)) return new Long(36L);
            return null;
        }

        public String getNamedValue(Long value)
        {
            if (new Long(0L).equals(value)) return "VoiceMailAdmin";
            if (new Long(1L).equals(value)) return "ContactCenter";
            if (new Long(2L).equals(value)) return "SBAInstaller";
            if (new Long(3L).equals(value)) return "SBASystemCoord";
            if (new Long(4L).equals(value)) return "SBASystemCoordBasic";
            if (new Long(5L).equals(value)) return "SBABasic";
            if (new Long(6L).equals(value)) return "Security";
            if (new Long(7L).equals(value)) return "CTEApp";
            if (new Long(8L).equals(value)) return "SBA-IPSetRegistration";
            if (new Long(9L).equals(value)) return "Application-BCMMonitor";
            if (new Long(10L).equals(value)) return "CDRApp";
            if (new Long(11L).equals(value)) return "ModemLogin";
            if (new Long(12L).equals(value)) return "GuestLogin";
            if (new Long(13L).equals(value)) return "AdminDownload";
            if (new Long(14L).equals(value)) return "ExclusiveAccess";
            if (new Long(15L).equals(value)) return "Admin";
            if (new Long(16L).equals(value)) return "DataAdmin";
            if (new Long(17L).equals(value)) return "RemoteAccess";
            if (new Long(18L).equals(value)) return "Guest";
            if (new Long(19L).equals(value)) return "VoiceAdmin";
            if (new Long(20L).equals(value)) return "BackupOperator";
            if (new Long(21L).equals(value)) return "RemoteMonitoring";
            if (new Long(22L).equals(value)) return "SoftwareUpgrade";
            if (new Long(24L).equals(value)) return "AlarmViewer";
            if (new Long(26L).equals(value)) return "OperationalLogs";
            if (new Long(27L).equals(value)) return "DiagnosticLogs";
            if (new Long(28L).equals(value)) return "ApplicationIVR";
            if (new Long(30L).equals(value)) return "ISDN-Dial-in";
            if (new Long(32L).equals(value)) return "WAN-Dial-in";
            if (new Long(36L).equals(value)) return "System-SerialPort";
            return null;
        }
    };

    public static transient NamedValueMap map = null;
    public void setup()
    {
        attributeName = NAME;
        attributeType = 26;
        vendorId = VENDOR_ID;
        vsaAttributeType = VSA_TYPE;
        attributeValue = new NamedValue(map != null ? map : (map = new NamedValueMap()));
    }

    public Attr_NortelPrivilegeLevel()
    {
        setup();
    }

    public Attr_NortelPrivilegeLevel(Serializable o)
    {
        setup(o);
    }
}
